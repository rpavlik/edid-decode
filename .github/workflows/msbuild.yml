name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: vs

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

  DIRNAME: edid-decode-built

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
    # Note that "OUTDIR" is a special name for MSBuild which is why it works this way.
      run: $env:OUTDIR="${{env.GITHUB_WORKSPACE}}/${{env.DIRNAME}}" ; msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Copy README files
      run: Copy-Item -Path "README","README.md" -Destination "${{env.GITHUB_WORKSPACE}}/${{env.DIRNAME}}/"
      working-directory: ${{env.GITHUB_WORKSPACE}}
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: Windows-Binary
        path: ${{env.GITHUB_WORKSPACE}}/${{env.DIRNAME}}